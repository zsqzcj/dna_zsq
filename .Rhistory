setwd("xena")
setwd("xena")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages(c("agricolae", "AlgDesign", "backports", "BH", "bibliometrix", "broom", "bslib", "cachem", "car", "carData", "classInt", "cli", "clipr", "colorspace", "commonmark", "conquer", "cpp11", "crayon", "curl", "data.table", "dendextend", "digest", "dplyr", "DT", "e1071", "evaluate", "FactoMineR", "fansi", "farver", "fastmap", "forcats", "fs", "generics", "ggmap", "ggplot2", "ggpubr", "ggrepel", "ggsci", "ggsignif", "glue", "gtable", "haven", "highr", "hms", "htmltools", "htmlwidgets", "httpuv", "httr", "hunspell", "igraph", "isoband", "janeaustenr", "jpeg", "jsonlite", "klaR", "knitr", "labelled", "later", "lifecycle", "lme4", "magrittr", "maps", "maptools", "markdown", "MatrixModels", "matrixStats", "mime", "minqa", "nloptr", "openssl", "openxlsx", "pbkrtest", "pillar", "plotly", "plyr", "png", "proxy", "purrr", "quantreg", "questionr", "R.cache", "R.methodsS3", "R.oo", "R.utils", "R6", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "rio", "rlang", "rprojroot", "rstatix", "rstudioapi", "sass", "scales", "scatterplot3d", "shiny", "sourcetools", "sp", "stringdist", "stringi", "stringr", "styler", "sys", "tibble", "tidyr", "tidyselect", "tidytext", "tokenizers", "utf8", "vctrs", "viridisLite", "visNetwork", "withr", "xfun", "XML", "yaml", "zip"))
install.packages(c("agricolae", "AlgDesign", "backports", "BH", "bibliometrix", "broom", "bslib", "cachem", "car", "carData", "classInt", "cli", "clipr", "colorspace", "commonmark", "conquer", "cpp11", "crayon", "curl", "data.table", "dendextend", "digest", "dplyr", "DT", "e1071", "evaluate", "FactoMineR", "fansi", "farver", "fastmap", "forcats", "fs", "generics", "ggmap", "ggplot2", "ggpubr", "ggrepel", "ggsci", "ggsignif", "glue", "gtable", "haven", "highr", "hms", "htmltools", "htmlwidgets", "httpuv", "httr", "hunspell", "igraph", "isoband", "janeaustenr", "jpeg", "jsonlite", "klaR", "knitr", "labelled", "later", "lifecycle", "lme4", "magrittr", "maps", "maptools", "markdown", "MatrixModels", "matrixStats", "mime", "minqa", "nloptr", "openssl", "openxlsx", "pbkrtest", "pillar", "plotly", "plyr", "png", "proxy", "purrr", "quantreg", "questionr", "R.cache", "R.methodsS3", "R.oo", "R.utils", "R6", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "rio", "rlang", "rprojroot", "rstatix", "rstudioapi", "sass", "scales", "scatterplot3d", "shiny", "sourcetools", "sp", "stringdist", "stringi", "stringr", "styler", "sys", "tibble", "tidyr", "tidyselect", "tidytext", "tokenizers", "utf8", "vctrs", "viridisLite", "visNetwork", "withr", "xfun", "XML", "yaml", "zip"))
install.packages(c("agricolae", "AlgDesign", "backports", "BH", "bibliometrix", "broom", "bslib", "cachem", "car", "carData", "classInt", "cli", "clipr", "colorspace", "commonmark", "conquer", "cpp11", "crayon", "curl", "data.table", "dendextend", "digest", "dplyr", "DT", "e1071", "evaluate", "FactoMineR", "fansi", "farver", "fastmap", "forcats", "fs", "generics", "ggmap", "ggplot2", "ggpubr", "ggrepel", "ggsci", "ggsignif", "glue", "gtable", "haven", "highr", "hms", "htmltools", "htmlwidgets", "httpuv", "httr", "hunspell", "igraph", "isoband", "janeaustenr", "jpeg", "jsonlite", "klaR", "knitr", "labelled", "later", "lifecycle", "lme4", "magrittr", "maps", "maptools", "markdown", "MatrixModels", "matrixStats", "mime", "minqa", "nloptr", "openssl", "openxlsx", "pbkrtest", "pillar", "plotly", "plyr", "png", "proxy", "purrr", "quantreg", "questionr", "R.cache", "R.methodsS3", "R.oo", "R.utils", "R6", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "rio", "rlang", "rprojroot", "rstatix", "rstudioapi", "sass", "scales", "scatterplot3d", "shiny", "sourcetools", "sp", "stringdist", "stringi", "stringr", "styler", "sys", "tibble", "tidyr", "tidyselect", "tidytext", "tokenizers", "utf8", "vctrs", "viridisLite", "visNetwork", "withr", "xfun", "XML", "yaml", "zip"))
library(tidyverse)#每次重新打开R都要library一下
install.packages("tidyverse")
install.packages("tidyverse")
install.packages(c("agricolae", "AlgDesign", "backports", "BH", "bibliometrix", "bslib", "cachem", "car", "carData", "classInt", "clipr", "colorspace", "commonmark", "conquer", "crayon", "curl", "data.table", "dendextend", "digest", "dplyr", "DT", "e1071", "evaluate", "FactoMineR", "fansi", "farver", "fastmap", "fs", "generics", "ggmap", "ggpubr", "ggrepel", "ggsci", "ggsignif", "glue", "gtable", "highr", "htmltools", "htmlwidgets", "httpuv", "hunspell", "igraph", "isoband", "janeaustenr", "jpeg", "klaR", "knitr", "labelled", "later", "lme4", "magrittr", "maps", "maptools", "markdown", "MatrixModels", "matrixStats", "mime", "minqa", "nloptr", "openssl", "openxlsx", "pbkrtest", "plotly", "plyr", "png", "proxy", "purrr", "quantreg", "questionr", "R.cache", "R.methodsS3", "R.oo", "R.utils", "R6", "Rcpp", "RcppArmadillo", "RcppEigen", "rio", "rlang", "rprojroot", "rstatix", "sass", "scales", "scatterplot3d", "shiny", "sourcetools", "sp", "stringdist", "stringi", "styler", "sys", "tibble", "tidytext", "tokenizers", "utf8", "vctrs", "viridisLite", "visNetwork", "XML", "yaml", "zip"))
install.packages(c("colorspace", "dplyr", "fansi", "fs", "ggmap", "glue", "magrittr", "purrr", "rlang", "tibble", "utf8", "vctrs"))
install.packages("tidyverse")
install.packages("colorspace")
install.packages("dplyr")
BiocManager::install('GEOquery')
chooseBioCmirror()
BiocManager::install('GEOquery')
install.packages("BioManager")
chooseBioCmirror()
BiocManager::install('GEOquery')
install.packages("BioVersion")
install.packages("GEOquery")
library(GEOquery)
BiocManager::install('GEOquery')
install.packages("Bioconductor")
BiocManager::install('GEOquery')
chooseBioCmirror()
BiocManager::install('GEOquery')
.libPaths()
if(!require("hgu95av2"))
BiocManager::install("hgu95av2")
if(!require("hgu95av2.db"))
BiocManager::install("hgu95av2.db")
setwd("GSE27902")
library(tidyverse)
library(GEOquery)
gset = getGEO('GSE27902', destdir=".", AnnotGPL = F, getGPL = F)
class(gset)###得到数据类型
###提取子集
gset[[1]]###
pdata <- pData(gset[[1]])
table(pdata$source_name_ch1)
group_list <- ifelse(str_detect(pdata$source_name_ch1, "Tumor"), "tumor","normal")
group_list = factor(group_list,levels = c("normal","tumor"))
exp <- exprs(gset[[1]])
library(limma)
exp=normalizeBetweenArrays(exp)
range(exp)
exp <- as.data.frame(exp)
GPL9183 <- as.data.frame(GPL9183)
GPL9183 <- read.delim("C:/Users/24970/Desktop/GPL9183.txt", row.names=1)
View(GPL9183)
GPL9183 <- as.data.frame(GPL9183)
comname <- intersect(rownames(exp),rownames(GPL9183))
exp <- exp[comname,]
GPL9183 <- GPL9183[comname,]
exp1 <- cbind(GPL9183,exp)
exp1 <- exp1[!duplicated(exp1$Symbol),]
View(exp1)
rownames(exp1) <- exp1$Symbol
View(exp1)
exp1 <- exp1[,-(1:15)]
View(exp1)
gset = getGEO('GSE27902', destdir=".", AnnotGPL = F, getGPL = F)
class(gset)
gset[[1]]
exp <- exprs(gset[[1]])
exp <- as.data.frame(exp)
GPL9183 <- as.data.frame(GPL9183)
comname <- intersect(rownames(exp),rownames(GPL9183))###取交集
exp <- exp[comname,]###将exp里和gpl9183相同行名提取出来，盖exp
GPL9183 <- GPL9183[comname,]
exp1 <- cbind(GPL9183,exp)###两个结合在一起gpl在前面
exp1 <- exp1[!duplicated(exp1$Symbol),]###去重复
rownames(exp1) <- exp1$Symbol
View(exp1)
